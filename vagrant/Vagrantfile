# vi: set ft=ruby :

SALT_VERSION = "v2016.3.2"
USER = "vagrant"
ENV_NAME = "VAGRANT"

Vagrant.configure("2") do |config|
  config.vm.box = "trusty64"
  config.vm.box_url = "https://cloud-images.ubuntu.com/vagrant/trusty/current/trusty-server-cloudimg-amd64-vagrant-disk1.box"

  config.vm.provider "virtualbox" do |v|
    v.memory = 2048
    v.cpus = 2
  end

  config.vm.define "master" do |node|
    node.vm.hostname = "master"
    node.vm.network :private_network, ip: "192.168.33.10"
    # Additional NIC for cluster network
    node.vm.network :private_network, ip: "192.168.36.10"

    # Add 3 additional 4GB drives
    node.vm.provider "virtualbox" do |v|
      ["1","2","3"].each do |disk|
        diskname = File.expand_path("~/master-#{disk}.vdi")
        v.customize ['createhd', '--filename', diskname, '--size', 4096] unless File.exist?(diskname)
        v.customize ['storageattach', :id, '--storagectl', 'SATAController', '--port', disk, '--device', 0, '--type', 'hdd', '--medium', diskname]
      end
    end

    node.vm.synced_folder "../../ceph-salt", "/home/#{USER}/ceph-salt"
    node.vm.provision "file", source: "../pillar/environment-EXAMPLE.sls", destination: "/home/#{USER}/config/environment-#{ENV_NAME}.sls"
    node.vm.provision "file", source: "../pillar/top.sls", destination: "/home/#{USER}/config/top.sls"
    node.vm.provision "file", source: "../pillar/ceph-EXAMPLE.sls", destination: "/home/#{USER}/config/ceph-#{ENV_NAME}.sls"

    # salt-master provisioning
    node.vm.provision :salt do |salt|
      salt.install_type = "git"
      salt.install_args = "#{SALT_VERSION}"
      salt.install_master = true
      salt.master_config = "configs/master"
      salt.run_highstate = false
      salt.master_key = 'keys/master.pem'
      salt.master_pub = 'keys/master.pub'

      salt.minion_config = "configs/minion"
      salt.minion_key = 'keys/master.pem'
      salt.minion_pub = 'keys/master.pub'

      salt.seed_master = {
        'node01' => 'keys/node01.pub',
        'node02' => 'keys/node02.pub',
        'master' => 'keys/master.pub'
      }
    end

    # Replace ENV_NAME in salt minion and the top file, also replace USER in salt master config
    node.vm.provision "shell", run: "always", inline: <<-SHELL
      sed -i 's/ENV_NAME/#{ENV_NAME}/g' /home/'#{USER}'/config/top.sls
      sed -i 's/ENV_NAME/#{ENV_NAME}/g' /etc/salt/minion
      sed -i 's/USER/#{USER}/g' /etc/salt/master
      restart salt-minion
      restart salt-master
    SHELL
  end

  config.vm.define "node01" do |node|
    node.vm.hostname = "node01"
    node.vm.network :private_network, ip: "192.168.33.20"
    # Additional NIC for cluster network
    node.vm.network :private_network, ip: "192.168.36.20"

    # Add 3 additional 4GB drives
    node.vm.provider "virtualbox" do |v|
      ["1","2","3"].each do |disk|
        diskname = File.expand_path("~/node01-#{disk}.vdi")
        v.customize ['createhd', '--filename', diskname, '--size', 4096] unless File.exist?(diskname)
        v.customize ['storageattach', :id, '--storagectl', 'SATAController', '--port', disk, '--device', 0, '--type', 'hdd', '--medium', diskname]
      end
    end

    # salt-minion provisioning
    node.vm.provision :salt do |salt|
      salt.install_type = "git"
      salt.install_args = "#{SALT_VERSION}"
      salt.minion_config = "configs/minion"
      salt.minion_key = 'keys/node01.pem'
      salt.minion_pub = 'keys/node01.pub'
    end

    # Replace ENV_NAME in salt minion config
    node.vm.provision "shell", run: "always", inline: <<-SHELL
      sed -i 's/ENV_NAME/#{ENV_NAME}/g' /etc/salt/minion
      restart salt-minion
    SHELL
  end

  config.vm.define "node02" do |node|
    node.vm.hostname = "node02"
    node.vm.network :private_network, ip: "192.168.33.30"
    # Additional NIC for cluster network
    node.vm.network :private_network, ip: "192.168.36.30"

    # Add 3 additional 4GB drives
    node.vm.provider "virtualbox" do |v|
      ["1","2","3"].each do |disk|
        diskname = File.expand_path("~/node02-#{disk}.vdi")
        v.customize ['createhd', '--filename', diskname, '--size', 4096] unless File.exist?(diskname)
        v.customize ['storageattach', :id, '--storagectl', 'SATAController', '--port', disk, '--device', 0, '--type', 'hdd', '--medium', diskname]
      end
    end

    # salt-minion provisioning
    node.vm.provision :salt do |salt|
      salt.install_type = "git"
      salt.install_args = "#{SALT_VERSION}"
      salt.minion_config = "configs/minion"
      salt.minion_key = 'keys/node02.pem'
      salt.minion_pub = 'keys/node02.pub'
    end

    # Replace ENV_NAME in salt minion config
    node.vm.provision "shell", run: "always", inline: <<-SHELL
      sed -i 's/ENV_NAME/#{ENV_NAME}/g' /etc/salt/minion
      restart salt-minion
    SHELL
  end
end
